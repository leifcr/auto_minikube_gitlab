# values-minikube.yaml
# This example intended as baseline to use Minikube for the deployment of GitLab
# - Minimized CPU/Memory load, can fit into 2 CPU, 4 GB of RAM (barely)
# - Services that are not compatible with how Minikube runs are disabled
# - Some services entirely removed, or scaled down to 1 replica.
# - Configured to use __IP__, and nip.io for the domain

# Minimal settings
global:
  ingress:
    configureCertmanager: false
    class: "nginx"
    tls:
      secretName: wildcard-testing-selfsigned-tls-__IP__
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    domain: __IP__.nip.io
    externalIP: __IP__
    https: false
# Don't use certmanager, we'll self-sign
certmanager:
  install: false
# Use the `ingress` addon, not our Ingress (can't map 22/80/443)
nginx-ingress:
  enabled: false
# Save resources, only 2 CPU
prometheus:
  install: false
# GitLab Runner isn't a big fan of self-signed certificates
gitlab-runner:
  install: true
  gitlabUrl: http://gitlab.__IP__.nip.io
  unregisterRunners: true
  rbac:
    create: true
  metrics:
    enabled: false
  runners:
    privileged: true
    cache: {}
    builds: {}
    services: {}
    helpers: {}
    resources: {}
    affinity: {}
    nodeSelector: {}
    tolerations: []

# Reduce replica counts, reducing CPU & memory requirements  
gitlab:
  unicorn:
    minReplicas: 1
    maxReplicas: 1
    ingress:
      tls:
        enabled: true
    #     secretName: gitlab-unicorn-tls
  sidekiq:
    minReplicas: 1
    maxReplicas: 1
  gitlab-shell:
    minReplicas: 1
    maxReplicas: 1
registry:
  minReplicas: 1
  maxReplicas: 1
  ingress:
    tls:
      enabled: true
#     secretName: gitlab-registry-tls
minio:
  ingress:
    tls:
      enabled: true

#       secretName: gitlab-minio-tls
